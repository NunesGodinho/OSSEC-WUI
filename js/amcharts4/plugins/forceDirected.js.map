{"version":3,"sources":["webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedLink.ts","webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedNode.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/add.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/cover.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quad.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/x.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/y.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quadtree.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/data.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/extent.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/find.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/remove.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/root.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/size.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visit.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visitAfter.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/constant.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/jiggle.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/collide.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/link.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-dispatch/src/dispatch.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-timer/src/timer.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/simulation.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/x.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/y.js","webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedSeries.ts","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/manyBody.js","webpack:///../../../../../src/.internal/plugins/forceDirected/ForceDirectedTree.ts","webpack:///./plugins/forceDirected.js"],"names":["ForceDirectedLink_ForceDirectedLink","_super","ForceDirectedLink","_this","call","this","className","interfaceColors","InterfaceColorSet","fillOpacity","strokeOpacity","stroke","getFor","isMeasured","nonScalingStroke","interactionsEnabled","distance","strength","applyTheme","tslib_es6","prototype","validate","source","target","path","Path","x","pixelX","y","pixelY","isHidden","isHiding","hide","show","Object","defineProperty","_source","value","_disposers","push","events","on","invalidate","_target","adapter","isEnabled","apply","properties","setPropertyValue","Sprite","Registry","registeredClasses","ForceDirectedNode_ForceDirectedNode","ForceDirectedNode","applyOnClones","togglable","draggable","setStateOnChildren","isActive","dataItem","component","nodeDragStarted","updateSimulation","outerCircle","createChild","Circle","shouldClone","strokeWidth","bgColor","fill","states","create","scale","outerActiveState","visible","circle","hiddenState","radius","addDisposer","updateLabelSize","label","Label","horizontalCenter","verticalCenter","textAlign","textValign","add","pixelRadius","text","dsRadius","defaultState","Type","width","height","copyFrom","setActive","children","childrenInited","initNode","updateNodeList","each","child","node","parentLink","dispatchVisibility","restartSimulation","Container","tree","d","isNaN","parent","xm","ym","xp","yp","right","bottom","i","j","_root","leaf","data","x0","_x0","y0","_y0","x1","_x1","y1","_y1","length","_x","_y","next","Array","src_quad","defaultX","defaultY","quadtree","nodes","Quadtree","NaN","addAll","undefined","leaf_copy","copy","treeProto","pop","cover","n","xz","yz","Infinity","Math","floor","z","visit","extent","_","arguments","find","x2","y2","q","x3","y3","quads","Quad","dx","dy","d2","sqrt","remove","retainer","previous","removeAll","root","size","callback","visitAfter","constant","jiggle","random","vx","vy","index","nodeById","nodeId","get","Error","noop","dispatch","t","Dispatch","type","name","c","set","slice","concat","constructor","typename","T","typenames","types","trim","split","map","indexOf","hasOwnProperty","parseTypenames","that","args","taskHead","taskTail","frame","timeout","interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","timer__typeof","now","Date","setFrame","window","requestAnimationFrame","bind","f","setTimeout","clearNow","Timer","_call","_time","_next","timer","delay","time","restart","wake","e","timerFlush","t0","t2","t1","sleep","nap","poke","clearTimeout","clearInterval","setInterval","TypeError","stop","initialRadius","initialAngle","PI","src_simulation","simulation","alpha","alphaMin","alphaDecay","pow","alphaTarget","velocityDecay","forces","Map","stepper","step","event","tick","iterations","k","forEach","force","fx","fy","initializeNodes","angle","cos","sin","initializeForce","initialize","closest","d3_force_src_x","strengths","d3_force_src_y","ForceDirectedSeries_ForceDirectedSeriesDataItem","ForceDirectedSeriesDataItem","hasChildren","childLinks","List","duration","fields","_visible","event_1","dispatchImmediately","toValue","event_2","values","setValue","_node","component_1","node_1","Disposer","removeValue","addSprite","itemsFocusable","role","focusable","once","ev","readerTitle","populateString","itemReaderText","hoverable","level","color","console","log","colors","getIndex","setProperty","linkWith","hiddenInLegend","collapsed","createLegendMarker","marker","_legendDataItem","valueLabel","Series","ForceDirectedSeries_ForceDirectedSeries","ForceDirectedSeries","d3forceSimulation","maxRadius","Percent","minRadius","ColorSet","manyBodyStrength","centerStrength","updateRadiuses","dataItems","updateLinksAndNodes","innerWidth","innerHeight","getMaxValue","max","cmax","validateDataItems","_dataDisposers","links","_maxValue","_forceLinks","reset","min","utils_Math","dataFields","processLinkWith","chart","feedLegend","_linkForce","distances","count","bias","id","link","l","b","m","_typeof","initializeStrength","initializeDistance","src_link","_collisionForce","radii","xi","yi","ri","ri2","prepare","quad","rj","r","collide","linkDatum","getDistance","getStrength","__disabled","disabled","distanceMin2","distanceMax2","theta2","accumulate","weight","abs","w","distanceMin","distanceMax","theta","manyBody","nodeDragEnded","updateRadius","minSide","Utils","getKey","nodeIndex","cursorOverStyle","Mouse","pointer","default","dataItemsInvalid","maxLevels","index_1","zIndex","childIndex","diColor","utils_Array","dataItemToConnect","getDataItemById","di","createDataItem","_nodes","createNode","_links","createLink","getPropertyValue","RoundedRectangle","cornerRadius","legendDataItem","colorOrig","property","ForceDirectedTree_ForceDirectedTreeDataItem","ForceDirectedTreeDataItem","SerialChart","ForceDirectedTree_ForceDirectedTree","ForceDirectedTree","seriesContainer","layout","createSeries","legend","legendData_1","series","legendSettings","labelText","labels","template","itemLabelText","valueText","valueLabels","itemValueText","applyInternalDefaults","language","translate","am4plugins_forceDirected","forceDirected_namespaceObject"],"mappings":"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","file":"./plugins/forceDirected.js","sourcesContent":["/**\r\n * ForceDirectedLink module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Sprite, ISpriteProperties, ISpriteAdapters, ISpriteEvents } from \"../../core/Sprite\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport { ForceDirectedNode } from \"./ForceDirectedNode\";\r\nimport * as $path from \"../../core/rendering/Path\";\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedLink]].\r\n */\r\nexport interface IForceDirectedLinkProperties extends ISpriteProperties {\r\n\r\n\t/**\r\n\t * Distance between centers of source and target nodes.\r\n\t */\r\n\tdistance?: number;\r\n\r\n\t/**\r\n\t * Strength of the \"traction\" between source and target nodes.\r\n\t */\r\n\tstrength?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ForceDirectedLink]].\r\n */\r\nexport interface IForceDirectedLinkEvents extends ISpriteEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedLink]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IForceDirectedLinkAdapters extends ISpriteAdapters, IForceDirectedLinkProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A class that builds links between [[ForceDirectedNode]] elements.\r\n *\r\n * @see {@link IForceDirectedLinkEvents} for a list of available events\r\n * @see {@link IForceDirectedLinkAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedLink extends Sprite {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedLinkProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedLinkAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedLinkEvents;\r\n\r\n\t/**\r\n\t * Link source node\r\n\t */\r\n\tprotected _source: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * Link parent node\r\n\t */\r\n\tprotected _target: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedLink\";\r\n\r\n\t\tlet interfaceColors = new InterfaceColorSet();\r\n\r\n\t\tthis.fillOpacity = 0;\r\n\t\tthis.strokeOpacity = 0.5;\r\n\t\tthis.stroke = interfaceColors.getFor(\"grid\");\r\n\t\tthis.isMeasured = false;\r\n\t\tthis.nonScalingStroke = true;\r\n\r\n\t\tthis.interactionsEnabled = false;\r\n\r\n\t\tthis.distance = 1.5;\r\n\t\tthis.strength = 1;\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Validates element:\r\n\t * * Triggers events\r\n\t * * Redraws the element\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validate() {\r\n\t\tsuper.validate();\r\n\t\tlet source = this.source;\r\n\t\tlet target = this.target;\r\n\t\tif (source && target) {\r\n\t\t\tthis.path = $path.moveTo({ x: source.pixelX, y: source.pixelY }) + $path.lineTo({ x: target.pixelX, y: target.pixelY });\r\n\r\n\t\t\tif (source.isHidden || target.isHidden || source.isHiding || target.isHiding) {\r\n\t\t\t\tthis.hide();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.show()\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Source node - a node link starts from.\r\n\t * \r\n\t * @param  value  Source node\r\n\t */\r\n\tpublic set source(value: ForceDirectedNode) {\r\n\t\tif (value) {\r\n\t\t\tthis._source = value;\r\n\t\t\tthis._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Source node\r\n\t */\r\n\tpublic get source(): ForceDirectedNode {\r\n\t\treturn this._source;\r\n\t}\r\n\r\n\t/**\r\n\t * Target node - a node link ends at.\r\n\t * \r\n\t * @param  value  Target node\r\n\t */\r\n\tpublic set target(value: ForceDirectedNode) {\r\n\t\tif (value) {\r\n\t\t\tthis._target = value;\r\n\t\t\tthis._disposers.push(value.events.on(\"positionchanged\", this.invalidate, this, false));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Target node\r\n\t */\r\n\tpublic get target(): ForceDirectedNode {\r\n\t\treturn this._target;\r\n\t}\r\n\r\n\t/**\r\n\t * Distance between centers of source and target nodes.\r\n\t *\r\n\t * This is relative to the radii to sum of both source and target nodes.\r\n\t *\r\n\t * E.g. if this would be set to `1` both nodes would be touching each other.\r\n\t *\r\n\t * @default 1.5\r\n\t * @param  value  Distance\r\n\t */\r\n\tpublic set distance(value: number) {\r\n\t\tthis.setPropertyValue(\"distance\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Distance\r\n\t */\r\n\tpublic get distance(): number {\r\n\t\tif (this.adapter.isEnabled(\"distance\")) {\r\n\t\t\treturn this.adapter.apply(\"distance\", this.properties.distance);\r\n\t\t}\r\n\t\treturn this.properties.distance;\r\n\t}\r\n\r\n\t/**\r\n\t * Relative \"strength\" of the traction between linked nodes.\r\n\t *\r\n\t * Available values: 0 to XX.\r\n\t *\r\n\t * The bigger the number, the more rigid the link and the less it will\r\n\t * stretch when node is dragged.\r\n\t *\r\n\t * Carefully with very big numbers: nodes and links might start behaving\r\n\t * quite \"nerviously\".\r\n\t *\r\n\t * @default 1\r\n\t * @param  value  Strength\r\n\t */\r\n\tpublic set strength(value: number) {\r\n\t\tthis.setPropertyValue(\"strength\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Strength\r\n\t */\r\n\tpublic get strength(): number {\r\n\t\tif (this.adapter.isEnabled(\"strength\")) {\r\n\t\t\treturn this.adapter.apply(\"strength\", this.properties.strength);\r\n\t\t}\r\n\t\treturn this.properties.strength;\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedLink\"] = ForceDirectedLink;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedLink.ts","/**\r\n * Module that defines everything related to building ForceDirectedNodes.\r\n * \r\n * It is a container which has ForceDirectedNode element which is a RoundedRectangle.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { Container, IContainerProperties, IContainerAdapters, IContainerEvents } from \"../../core/Container\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { Circle } from \"../../core/elements/Circle\";\r\nimport { Label } from \"../../core/elements/Label\";\r\nimport { ForceDirectedSeriesDataItem } from \"./ForceDirectedSeries\";\r\nimport { InterfaceColorSet } from \"../../core/utils/InterfaceColorSet\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedNode]].\r\n */\r\nexport interface IForceDirectedNodeProperties extends IContainerProperties { }\r\n\r\n/**\r\n * Defines events for [[ForceDirectedNode]].\r\n */\r\nexport interface IForceDirectedNodeEvents extends IContainerEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedNode]].\r\n *\r\n * @see {@link Adapter}\r\n */\r\nexport interface IForceDirectedNodeAdapters extends IContainerAdapters, IForceDirectedNodeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Class used to creates [[ForceDirectedNode]] elements (circles).\r\n *\r\n * @see {@link IForceDirectedNodeEvents} for a list of available events\r\n * @see {@link IForceDirectedNodeAdapters} for a list of available Adapters\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedNode extends Container {\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedNodeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedNodeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedNodeEvents;\r\n\r\n\t/**\r\n\t * A node's [[Circle]] element.\r\n\t */\r\n\tpublic circle: Circle;\r\n\r\n\t/**\r\n\t * A [[Circle]] element for node's outline. This outline is used on nodes\r\n\t * that have children.\r\n\t */\r\n\tpublic outerCircle: Circle;\r\n\r\n\t/**\r\n\t * Related data item.\r\n\t */\r\n\tpublic _dataItem: ForceDirectedSeriesDataItem;\r\n\r\n\t/**\r\n\t * Node's [[Label]] element.\r\n\t */\r\n\tpublic label: Label;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedNode\";\r\n\r\n\t\t//this.isMeasured = true; // for correct position of the tooltip\r\n\t\tthis.applyOnClones = true;\r\n\t\tthis.togglable = true;\r\n\t\tthis.draggable = true;\r\n\t\tthis.setStateOnChildren = true;\r\n\r\n\t\tthis.isActive = false;\r\n\r\n\t\tthis.events.on(\"dragstart\", () => {\r\n\t\t\tif (this.dataItem.component) {\r\n\t\t\t\tthis.dataItem.component.nodeDragStarted();\r\n\t\t\t}\r\n\t\t}, this, false);\r\n\r\n\t\tthis.events.on(\"drag\", () => {\r\n\t\t\tthis.updateSimulation();\r\n\t\t}, this, false);\r\n\r\n\t\tlet outerCircle = this.createChild(Circle);\r\n\t\touterCircle.shouldClone = false;\r\n\t\touterCircle.strokeWidth = 2;\r\n\r\n\t\tlet bgColor = new InterfaceColorSet().getFor(\"background\");\r\n\t\touterCircle.fill = bgColor;\r\n\t\tthis.outerCircle = outerCircle;\r\n\r\n\t\tlet hoverState = outerCircle.states.create(\"hover\");\r\n\t\thoverState.properties.scale = 1.1;\r\n\r\n\t\tlet outerActiveState = outerCircle.states.create(\"active\");\r\n\t\touterActiveState.properties.scale = 1.1;\r\n\t\touterActiveState.properties.visible = true;\r\n\r\n\t\tlet activeHoverState = outerCircle.states.create(\"hoverActive\");\r\n\t\tactiveHoverState.properties.scale = 1;\r\n\r\n\t\tlet circle = this.createChild(Circle);\r\n\r\n\t\tlet activeState = circle.states.create(\"active\");\r\n\t\tactiveState.properties.visible = true;\r\n\r\n\t\tcircle.shouldClone = false;\r\n\t\tcircle.interactionsEnabled = false;\r\n\t\tcircle.hiddenState.properties.radius = 0.01;\r\n\t\tcircle.events.on(\"validated\", this.updateSimulation, this, false)\r\n\t\tcircle.hiddenState.properties.visible = true;\r\n\r\n\r\n\t\tthis.circle = circle;\r\n\r\n\t\tthis.addDisposer(outerCircle.events.on(\"validated\", this.updateLabelSize, this, false));\r\n\r\n\t\tthis._disposers.push(this.circle);\r\n\r\n\t\tlet label = this.createChild(Label);\r\n\t\tlabel.shouldClone = false;\r\n\t\tlabel.horizontalCenter = \"middle\";\r\n\t\tlabel.verticalCenter = \"middle\";\r\n\t\tlabel.fill = bgColor;\r\n\t\tlabel.strokeOpacity = 0;\r\n\t\tlabel.interactionsEnabled = false;\r\n\t\tlabel.textAlign = \"middle\";\r\n\t\tlabel.textValign = \"middle\";\r\n\t\tthis.label = label;\r\n\r\n\t\tthis.adapter.add(\"tooltipY\", (y, target) => {\r\n\t\t\treturn -target.circle.pixelRadius;\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateLabelSize() {\r\n\t\tif (this.label.text) {\r\n\t\t\tlet circle = this.circle;\r\n\t\t\tlet radius = circle.pixelRadius;\r\n\r\n\t\t\tlet ds = circle.defaultState;\r\n\t\t\tlet dsRadius = ds.properties.radius\r\n\t\t\tif ($type.isNumber(dsRadius)) {\r\n\t\t\t\tradius = dsRadius;\r\n\t\t\t}\r\n\r\n\t\t\tthis.label.width = 2 * radius;\r\n\t\t\tthis.label.height = 2 * radius;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Copies all parameters from another [[ForceDirectedNode]].\r\n\t *\r\n\t * @param source Source ForceDirectedNode\r\n\t */\r\n\tpublic copyFrom(source: this) {\r\n\t\tsuper.copyFrom(source);\r\n\t\tif (this.circle) {\r\n\t\t\tthis.circle.copyFrom(source.circle);\r\n\t\t}\r\n\t\tif (this.label) {\r\n\t\t\tthis.label.copyFrom(source.label);\r\n\t\t}\r\n\t\tif (this.outerCircle) {\r\n\t\t\tthis.outerCircle.copyFrom(source.outerCircle);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Sets node as \"active\" (expanded).\r\n\t * \r\n\t * @ignore\r\n\t * @param  value  Active or not?\r\n\t */\r\n\tpublic setActive(value: boolean) {\r\n\t\tsuper.setActive(value);\r\n\r\n\t\tlet dataItem = this.dataItem;\r\n\r\n\t\tif (dataItem) {\r\n\r\n\t\t\tlet children = dataItem.children;\r\n\r\n\t\t\tif (value && children && !dataItem.childrenInited) {\r\n\t\t\t\tdataItem.component.initNode(dataItem);\r\n\t\t\t\tdataItem.component.updateNodeList();\r\n\t\t\t}\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\tif (children) {\r\n\t\t\t\t\tchildren.each((child) => {\r\n\t\t\t\t\t\tchild.node.show();\r\n\t\t\t\t\t\tchild.node.interactionsEnabled = true;\r\n\t\t\t\t\t\tif (child.parentLink) {\r\n\t\t\t\t\t\t\tchild.parentLink.show();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchild.node.isActive = true;\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tdataItem.dispatchVisibility(true);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (children) {\r\n\t\t\t\t\tchildren.each((child) => {\r\n\t\t\t\t\t\tif (child.parentLink) {\r\n\t\t\t\t\t\t\tchild.parentLink.hide();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tchild.node.isActive = false;\r\n\t\t\t\t\t\tchild.node.interactionsEnabled = false;\r\n\r\n\t\t\t\t\t\tchild.node.hide();\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tdataItem.dispatchVisibility(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.updateSimulation();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected updateSimulation() {\r\n\t\tlet dataItem = this.dataItem;\r\n\t\tif (dataItem && dataItem.component) {\r\n\t\t\tdataItem.component.restartSimulation();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedNode\"] = ForceDirectedNode;\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedNode.ts","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, abort.\n  if (x0 > x1 || y0 > y1) return this;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/add.js","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    while (x0 > x || x >= x1 || y0 > y || y >= y1) {\n      i = (y < y0) << 1 | (x < x0);\n      parent = new Array(4), parent[i] = node, node = parent, z *= 2;\n      switch (i) {\n        case 0: x1 = x0 + z, y1 = y0 + z; break;\n        case 1: x0 = x1 - z, y1 = y0 + z; break;\n        case 2: x1 = x0 + z, y0 = y1 - z; break;\n        case 3: x0 = x1 - z, y0 = y1 - z; break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/cover.js","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quad.js","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/x.js","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/y.js","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/quadtree.js","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/data.js","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/extent.js","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/find.js","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/remove.js","export default function() {\n  return this._root;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/root.js","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/size.js","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visit.js","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-quadtree/src/visitAfter.js","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/constant.js","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/jiggle.js","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/collide.js","import constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d])),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/link.js","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-dispatch/src/dispatch.js","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-timer/src/timer.js","import {dispatch} from \"d3-dispatch\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = new Map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick(iterations) {\n    var i, n = nodes.length, node;\n\n    if (iterations === undefined) iterations = 1;\n\n    for (var k = 0; k < iterations; ++k) {\n      alpha += (alphaTarget - alpha) * alphaDecay;\n\n      forces.forEach(function(force) {\n        force(alpha);\n      });\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        if (node.fx == null) node.x += node.vx *= velocityDecay;\n        else node.x = node.fx, node.vx = 0;\n        if (node.fy == null) node.y += node.vy *= velocityDecay;\n        else node.y = node.fy, node.vy = 0;\n      }\n    }\n\n    return simulation;\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (node.fx != null) node.x = node.fx;\n      if (node.fy != null) node.y = node.fy;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.forEach(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.delete(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/simulation.js","import constant from \"./constant.js\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/x.js","import constant from \"./constant.js\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/y.js","/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\nimport { Series, SeriesDataItem, ISeriesDataFields, ISeriesProperties, ISeriesAdapters, ISeriesEvents } from \"../../charts/series/Series\";\r\nimport { ForceDirectedTree, ForceDirectedTreeDataItem } from \"./ForceDirectedTree\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport { ListTemplate, ListDisposer, List } from \"../../core/utils/List\";\r\nimport { ForceDirectedNode } from \"./ForceDirectedNode\";\r\nimport { Disposer } from \"../../core/utils/Disposer\";\r\nimport { ForceDirectedLink } from \"./ForceDirectedLink\";\r\nimport { ColorSet } from \"../../core/utils/ColorSet\";\r\nimport * as d3force from \"d3-force\";\r\nimport * as $math from \"../../core/utils/Math\";\r\nimport * as $type from \"../../core/utils/Type\";\r\nimport * as $utils from \"../../core/utils/Utils\";\r\nimport * as $array from \"../../core/utils/Array\";\r\nimport { Percent, percent } from \"../../core/utils/Percent\";\r\nimport { Color } from \"../../core/utils/Color\";\r\nimport { LinearGradient } from \"../../core/rendering/fills/LinearGradient\";\r\nimport { RadialGradient } from \"../../core/rendering/fills/RadialGradient\";\r\nimport { Pattern } from \"../../core/rendering/fills/Pattern\";\r\nimport { MouseCursorStyle } from \"../../core/interaction/Mouse\";\r\nimport { OrderedListTemplate } from \"../../core/utils/SortedList\";\r\nimport { Container } from \"../../core/Container\";\r\nimport { LegendDataItem } from \"../../charts/Legend\";\r\nimport { RoundedRectangle } from \"../../core/elements/RoundedRectangle\";\r\nimport { Animation } from \"../../core/utils/Animation\";\r\nimport { AMEvent } from \"../../core/utils/EventDispatcher\";\r\nimport { IDataItemEvents } from \"../../core/DataItem\";\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedSeries]].\r\n *\r\n * @see {@link DataItem}\r\n * @since 4.3.8\r\n */\r\nexport class ForceDirectedSeriesDataItem extends SeriesDataItem {\r\n\r\n\t/**\r\n\t * Defines a type of [[Component]] this data item is used for.\r\n\t */\r\n\tpublic _component!: ForceDirectedSeries;\r\n\r\n\t/**\r\n\t * A reference to a component of a data item.\r\n\t */\r\n\tpublic component: ForceDirectedSeries;\r\n\r\n\t/**\r\n\t * A type of node used for this series.\r\n\t */\r\n\tpublic _node: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * A list of [[ForceDirectedLink]] elements of links  to node's children.\r\n\t *\r\n\t * This list does not include a link to node's parent, which is available\r\n\t * through `parentLink`.\r\n\t */\r\n\tpublic childLinks: List<ForceDirectedLink>;\r\n\r\n\t/**\r\n\t * A [[ForceDirectedLink]] to node's parent.\r\n\t */\r\n\tpublic parentLink: ForceDirectedLink;\r\n\r\n\t/**\r\n\t * A Legend's data item.\r\n\t */\r\n\tprotected _legendDataItem: LegendDataItem;\r\n\r\n\t/**\r\n\t * Have all children already been initialized?\r\n\t */\r\n\tpublic childrenInited: boolean = false;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedSeriesDataItem\";\r\n\r\n\t\tthis.hasChildren.children = true;\r\n\r\n\t\tthis.childLinks = new List<ForceDirectedLink>();\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Shows the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param fields    A list of fields to set values of\r\n\t */\r\n\tpublic show(duration?: number, delay?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis._visible = true;\r\n\r\n\t\tif (this.node) {\r\n\t\t\tthis.node.isActive = true;\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic dispatchVisibility(visible: boolean) {\r\n\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tvisible: visible\r\n\t\t\t};\r\n\r\n\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Hides the Data Item and related visual elements.\r\n\t *\r\n\t * @param duration  Animation duration (ms)\r\n\t * @param delay     Delay animation (ms)\r\n\t * @param toValue   A value to set to `fields` when hiding\r\n\t * @param fields    A list of data fields to set value to `toValue`\r\n\t */\r\n\tpublic hide(duration?: number, delay?: number, toValue?: number, fields?: string[]): $type.Optional<Animation> {\r\n\t\tthis._visible = false;\r\n\r\n\t\tif (this.events.isEnabled(\"visibilitychanged\")) {\r\n\t\t\tconst event: AMEvent<this, IDataItemEvents>[\"visibilitychanged\"] = {\r\n\t\t\t\ttype: \"visibilitychanged\",\r\n\t\t\t\ttarget: this,\r\n\t\t\t\tvisible: false\r\n\t\t\t};\r\n\r\n\t\t\tthis.events.dispatchImmediately(\"visibilitychanged\", event);\r\n\t\t}\r\n\r\n\t\tif (this.node) {\r\n\t\t\tthis.node.isActive = false;\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * Numeric value of the item.\r\n\t *\r\n\t * @param value  Value\r\n\t */\r\n\tpublic set value(value: number) {\r\n\t\tthis.setValue(\"value\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Value\r\n\t */\r\n\tpublic get value(): number {\r\n\r\n\t\tlet value = this.values.value.value;\r\n\r\n\t\tif (!$type.isNumber(value)) {\r\n\t\t\tif (this.children) {\r\n\t\t\t\tvalue = 0;\r\n\t\t\t\tthis.children.each((child) => {\r\n\t\t\t\t\tvalue += child.value;\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn value;\r\n\t}\r\n\r\n\t/**\r\n\t * An element, related to this data item. (node)\r\n\t *\r\n\t * @readonly\r\n\t * @return node element\r\n\t */\r\n\tpublic get node(): ForceDirectedNode {\r\n\t\tif (!this._node) {\r\n\r\n\t\t\tlet component = this.component;\r\n\r\n\t\t\tlet node = component.nodes.create();\r\n\t\t\tnode.draggable = true;\r\n\t\t\tthis._node = node;\r\n\r\n\t\t\tthis._disposers.push(node);\r\n\r\n\t\t\tthis._disposers.push(new Disposer(() => {\r\n\t\t\t\tcomponent.nodes.removeValue(node);\r\n\t\t\t}));\r\n\r\n\t\t\tthis.addSprite(node);\r\n\t\t\tnode.visible = this.visible;\r\n\t\t\tnode.hiddenState.properties.visible = true;\r\n\r\n\t\t\t// Apply accessibility\r\n\t\t\tif (component.itemsFocusable()) {\r\n\t\t\t\tnode.role = \"menuitem\";\r\n\t\t\t\tnode.focusable = true;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode.role = \"listitem\";\r\n\t\t\t\tnode.focusable = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Apply screen reader label\r\n\t\t\tif (node.focusable) {\r\n\t\t\t\tnode.events.once(\"focus\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tnode.events.once(\"blur\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t\tif (node.hoverable) {\r\n\t\t\t\tnode.events.once(\"over\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = component.populateString(component.itemReaderText, this);\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t\tnode.events.once(\"out\", (ev) => {\r\n\t\t\t\t\tnode.readerTitle = \"\";\r\n\t\t\t\t}, undefined, false);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this._node;\r\n\t}\r\n\r\n\t/**\r\n\t * Depth level in the series hierarchy.\r\n\t *\r\n\t * The top-level item will have level set at 0. Its children will have\r\n\t * level 1, and so on.\r\n\t *\r\n\t * @readonly\r\n\t * @return Level\r\n\t */\r\n\tpublic get level(): number {\r\n\t\tif (!this.parent) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn this.parent.level + 1;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Item's color.\r\n\t *\r\n\t * If not set, will use parent's color, or, if that is not set either,\r\n\t * automatically assigned color from chart's color set. (`chart.colors`)\r\n\t *\r\n\t * @param value  : Color | LinearGradient | RadialGradient | Pattern\r\n\t */\r\n\tpublic set color(value: Color | LinearGradient | RadialGradient | Pattern) {\r\n\t\tthis.setProperty(\"color\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color\r\n\t */\r\n\tpublic get color(): Color | LinearGradient | RadialGradient | Pattern {\r\n\t\tlet color = this.properties.color;\r\n\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tconsole.log(\"parent\")\r\n\t\t\t\tcolor = this.parent.color;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (color == undefined) {\r\n\t\t\tif (this.component) {\r\n\t\t\t\tcolor = this.component.colors.getIndex(this.component.colors.step * this.index);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn color;\r\n\t}\r\n\r\n\t/**\r\n\t * An array of id's of other nodes outside of the child/parent tree to link\r\n\t * with.\r\n\t * \r\n\t * @param  value  Link list\r\n\t */\r\n\tpublic set linkWith(value: string[]) {\r\n\t\tthis.setProperty(\"linkWith\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Link list\r\n\t */\r\n\tpublic get linkWith(): string[] {\r\n\t\treturn this.properties.linkWith;\r\n\t}\r\n\r\n\t/**\r\n\t * Should dataItem (node) be hidden in legend?\r\n\t *\r\n\t * @param value Visible in legend?\r\n\t */\r\n\tpublic set hiddenInLegend(value: boolean) {\r\n\t\tthis.setProperty(\"hiddenInLegend\", value);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Hidden in legend?\r\n\t */\r\n\tpublic get hiddenInLegend(): boolean {\r\n\t\treturn this.properties.hiddenInLegend;\r\n\t}\r\n\r\n\t/**\r\n\t * Indicates whether node should start off as collapsed.\r\n\t *\r\n\t * This can be used to specify whether node should start off as collapsed\r\n\t * via data.\r\n\t *\r\n\t * To toggle actual node, use its `isActive` property instead.\r\n\t * \r\n\t * @param  value  Collapsed?\r\n\t */\r\n\tpublic set collapsed(value: boolean) {\r\n\t\tthis.setProperty(\"collapsed\", value);\r\n\t\tthis.node.isActive = !value;\r\n\t}\r\n\r\n\t/**\r\n\t * @return Collapsed?\r\n\t */\r\n\tpublic get collapsed(): boolean {\r\n\t\treturn this.properties.collapsed;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of item's sub-children.\r\n\t *\r\n\t * @param children  Item's children\r\n\t */\r\n\tpublic set children(children: OrderedListTemplate<ForceDirectedSeriesDataItem>) {\r\n\t\tthis.setProperty(\"children\", children);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Item's children\r\n\t */\r\n\tpublic get children(): OrderedListTemplate<ForceDirectedSeriesDataItem> {\r\n\t\treturn this.properties.children;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a marker used in the legend for this slice.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker  Marker container\r\n\t */\r\n\tpublic createLegendMarker(marker: Container) {\r\n\t\tthis.component.createLegendMarker(marker, this);\r\n\t\tif (!this.node.isActive) {\r\n\t\t\tthis.hide();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * A legend's data item, that corresponds to this data item.\r\n\t *\r\n\t * @param value  Legend data item\r\n\t */\r\n\tpublic set legendDataItem(value: LegendDataItem) {\r\n\t\tthis._legendDataItem = value;\r\n\t\tif (value.label) {\r\n\t\t\tvalue.label.dataItem = this;\r\n\t\t}\r\n\t\tif (value.valueLabel) {\r\n\t\t\tvalue.valueLabel.dataItem = this;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return Legend data item\r\n\t */\r\n\tpublic get legendDataItem(): LegendDataItem {\r\n\t\treturn this._legendDataItem;\r\n\t}\r\n}\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ForceDirectedSeries]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesDataFields extends ISeriesDataFields {\r\n\r\n\t/**\r\n\t * Name of the field in data that holds category.\r\n\t */\r\n\tcategory?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's sub-items.\r\n\t */\r\n\tchildren?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's name.\r\n\t */\r\n\tname?: string;\r\n\r\n\t/**\r\n\t * A name of the field tha holds an array of ids that node should link with\r\n\t * besides of it's own children or parent.\r\n\t */\r\n\tlinkWith?: string;\r\n\r\n\t/**\r\n\t * A name of the field in data that holds item's color.\r\n\t *\r\n\t * If not set, a new color will be automatically assigned to each item as\r\n\t * defined by theme.\r\n\t */\r\n\tcolor?: string;\r\n\r\n\t/**\r\n\t * Name of the field in data that holds boolean flag if item should be\r\n\t * hidden in legend.\r\n\t */\r\n\thiddenInLegend?: string;\r\n\r\n\t/**\r\n\t * A name of the field that holds boolean flag whether node should start\r\n\t * as collapsed. (nodes start as fully expanded by default)\r\n\t */\r\n\tcollapsed?: string;\r\n}\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedSeries]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesProperties extends ISeriesProperties {\r\n\r\n\t/**\r\n\t * Smallest possible radius in pixels of the node circle.\r\n\t * \r\n\t * @default 5\r\n\t */\r\n\tminRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * Biggest possible radius in pixels of the node circle.\r\n\t * \r\n\t * @default 70\r\n\t */\r\n\tmaxRadius?: number | Percent;\r\n\r\n\t/**\r\n\t * A color set to be used for coloring nodes.\r\n\t *\r\n\t * Each new top level will be assigned a new color from this list.\r\n\t */\r\n\tcolors?: ColorSet;\r\n\r\n\t/**\r\n\t * Number of levels to display initially.\r\n\t */\r\n\tmaxLevels?: number;\r\n\r\n\t/**\r\n\t * A relative strength with which nodes push or attract each other.\r\n\t */\r\n\tmanyBodyStrength?: number;\r\n\r\n\t/**\r\n\t * A relative strength with which nodes are pushed away or attracted to\r\n\t * center of the chart.\r\n\t */\r\n\tcenterStrength?: number;\r\n\r\n}\r\n\r\n/**\r\n * Defines events for [[ForceDirectedSeries]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesEvents extends ISeriesEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedSeries]].\r\n *\r\n * @see {@link Adapter}\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedSeriesAdapters extends ISeriesAdapters, IForceDirectedSeriesProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines [[Series]] for a [[ForceDirectedTree]] chart.\r\n *\r\n * @see {@link IForceDirectedSeriesEvents} for a list of available Events\r\n * @see {@link IForceDirectedSeriesAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/ForceDirectedTree/} For more information\r\n * @todo Example\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedSeries extends Series {\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _node: ForceDirectedNode;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _nodes: ListTemplate<this[\"_node\"]>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tpublic _link: ForceDirectedLink;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _links: ListTemplate<this[\"_link\"]>;\r\n\r\n\t/**\r\n\t * Defines the type of data fields used for the series.\r\n\t */\r\n\tpublic _dataFields: IForceDirectedSeriesDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedSeriesProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedSeriesAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedSeriesEvents;\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: ForceDirectedSeriesDataItem;\r\n\r\n\t/**\r\n\t * A chart series belongs to.\r\n\t */\r\n\tpublic _chart: ForceDirectedTree;\r\n\r\n\t/**\r\n\t * Parent data item of a series.\r\n\t */\r\n\tpublic parentDataItem: ForceDirectedTreeDataItem;\r\n\r\n\t/**\r\n\t * A reference to the `d3.Simulation` instance for fine-grained configuration\r\n\t * of node gravitational dynamics.\r\n\t *\r\n\t * @see {@link https://github.com/d3/d3-force#simulation} For more info\r\n\t */\r\n\tpublic d3forceSimulation: d3force.Simulation<{}, d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _maxValue: number;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _forceLinks: d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>[];\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _linkForce: d3force.ForceLink<d3force.SimulationNodeDatum, d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>>;\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected _collisionForce: d3force.ForceCollide<d3force.SimulationNodeDatum>;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedSeries\";\r\n\r\n\t\tthis.d3forceSimulation = d3force.forceSimulation();\r\n\r\n\t\tthis.maxRadius = percent(8);\r\n\t\tthis.minRadius = percent(1);\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.colors = new ColorSet();\r\n\t\tthis.colors.step = 2;\r\n\r\n\t\tthis.width = percent(100);\r\n\t\tthis.height = percent(100);\r\n\r\n\t\tthis.manyBodyStrength = -15;\r\n\t\tthis.centerStrength = 0.8;\r\n\r\n\t\tthis.events.on(\"maxsizechanged\", () => {\r\n\t\t\tthis.updateRadiuses(this.dataItems);\r\n\t\t\tthis.updateLinksAndNodes();\r\n\r\n\t\t\tlet d3forceSimulation = this.d3forceSimulation;\r\n\r\n\t\t\tif (d3forceSimulation) {\r\n\t\t\t\td3forceSimulation.force(\"x\", d3force.forceX().x(this.innerWidth / 2).strength(this.centerStrength * 100 / this.innerWidth));\r\n\t\t\t\td3forceSimulation.force(\"y\", d3force.forceY().y(this.innerHeight / 2).strength(this.centerStrength * 100 / this.innerHeight));\r\n\t\t\t\tif (d3forceSimulation.alpha() < 0.4) {\r\n\t\t\t\t\td3forceSimulation.alpha(0.4);\r\n\t\t\t\t\td3forceSimulation.restart();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns maximum value from all supplied data items.\r\n\t * \r\n\t * @ignore\r\n\t * @param   dataItems  List of data items\r\n\t * @param   max        Default max\r\n\t * @return             Max\r\n\t */\r\n\tprotected getMaxValue(dataItems: OrderedListTemplate<ForceDirectedSeriesDataItem>, max: number): number {\r\n\t\tdataItems.each((dataItem) => {\r\n\t\t\tif (dataItem.value > max) {\r\n\t\t\t\tmax = dataItem.value;\r\n\t\t\t}\r\n\r\n\t\t\tif (dataItem.children) {\r\n\t\t\t\tlet cmax = this.getMaxValue(dataItem.children, max);\r\n\t\t\t\tif (cmax > max) {\r\n\t\t\t\t\tmax = cmax;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn max;\r\n\t}\r\n\r\n\t/**\r\n\t * Validates (processes) data items.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t */\r\n\tpublic validateDataItems(): void {\r\n\r\n\t\tthis._dataDisposers.push(new ListDisposer(this.links));\r\n\r\n\t\tthis._maxValue = this.getMaxValue(this.dataItems, 0);\r\n\r\n\t\tthis._forceLinks = [];\r\n\r\n\t\tthis.colors.reset();\r\n\r\n\t\tlet index = 0;\r\n\r\n\t\tlet radius = Math.min(this.innerHeight / 3, this.innerWidth / 3);\r\n\r\n\t\tif (this.dataItems.length <= 1) {\r\n\t\t\tradius = 0;\r\n\t\t}\r\n\r\n\t\tthis.dataItems.each((dataItem) => {\r\n\r\n\t\t\tlet angle = index / this.dataItems.length * 360;\r\n\r\n\t\t\tdataItem.node.x = this.innerWidth / 2 + radius * $math.cos(angle);\r\n\t\t\tdataItem.node.y = this.innerHeight / 2 + radius * $math.sin(angle);\r\n\r\n\t\t\tdataItem.node.fill = dataItem.color;\r\n\t\t\tdataItem.node.stroke = dataItem.color;\r\n\r\n\t\t\tindex++;\r\n\r\n\t\t\tthis.initNode(dataItem);\r\n\t\t})\r\n\r\n\t\tif (this.dataFields.linkWith) {\r\n\t\t\tthis.dataItems.each((dataItem) => {\r\n\t\t\t\tthis.processLinkWith(dataItem);\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet d3forceSimulation = this.d3forceSimulation;\r\n\r\n\t\td3forceSimulation.on(\"tick\", () => {\r\n\t\t\tthis.updateLinksAndNodes();\r\n\t\t});\r\n\r\n\t\t// helps to avoid initial scatter\r\n\t\tfor(let i = 0; i < 10; i++){\r\n\t\t\td3forceSimulation.tick();\r\n\t\t}\t\t\r\n\t\td3forceSimulation.alphaDecay(1 - Math.pow(0.001, 1 / 600));\r\n\r\n\t\tthis.chart.feedLegend();\r\n\r\n\t\tsuper.validateDataItems();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tpublic updateNodeList() {\r\n\t\tlet d3forceSimulation = this.d3forceSimulation;\r\n\t\td3forceSimulation.nodes(this.nodes.values);\r\n\t\tthis._linkForce = d3force.forceLink(this._forceLinks);\r\n\t\td3forceSimulation.force(\"link\", this._linkForce);\r\n\t\tthis._collisionForce = d3force.forceCollide();\r\n\t\td3forceSimulation.force(\"collision\", this._collisionForce);\r\n\r\n\t\td3forceSimulation.force(\"x\", d3force.forceX().x(this.innerWidth / 2).strength(this.centerStrength * 100 / this.innerWidth));\r\n\t\td3forceSimulation.force(\"y\", d3force.forceY().y(this.innerHeight / 2).strength(this.centerStrength * 100 / this.innerHeight));\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tpublic updateLinksAndNodes() {\r\n\t\tif (this._linkForce) {\r\n\t\t\tthis._linkForce.distance((linkDatum) => { return this.getDistance(linkDatum) });\r\n\t\t\tthis._linkForce.strength((linkDatum) => { return this.getStrength(linkDatum) });\r\n\t\t}\r\n\r\n\t\tif (this._collisionForce) {\r\n\t\t\tthis._collisionForce.radius(function(node) {\r\n\t\t\t\tif (node instanceof ForceDirectedNode) {\r\n\t\t\t\t\tlet radius = node.circle.pixelRadius;\r\n\t\t\t\t\tif(!node.outerCircle.__disabled && !node.outerCircle.disabled && node.outerCircle.visible){\r\n\t\t\t\t\t\tradius = (radius + 3) * node.outerCircle.scale;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn radius;\t\t\t\t\t \t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\treturn 1;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tthis.d3forceSimulation.force(\"manybody\", d3force.forceManyBody().strength((node) => {\r\n\t\t\tif (node instanceof ForceDirectedNode) {\r\n\t\t\t\treturn node.circle.pixelRadius * this.manyBodyStrength;\r\n\t\t\t}\r\n\t\t\treturn this.manyBodyStrength;\r\n\t\t}));\t\t\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected getDistance(linkDatum: d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>) {\r\n\r\n\t\tlet source: ForceDirectedNode = <ForceDirectedNode>linkDatum.source;\r\n\t\tlet target: ForceDirectedNode = <ForceDirectedNode>linkDatum.target;\r\n\r\n\t\tlet distance = 0;\r\n\t\tif (target.dataItem && source.dataItem) {\r\n\t\t\tif (target.dataItem.parentLink) {\r\n\t\t\t\tdistance = target.dataItem.parentLink.distance;\r\n\t\t\t}\r\n\t\t\tif (!source.isActive) {\r\n\t\t\t\tdistance = 1;\r\n\t\t\t}\r\n\t\t\treturn (distance * (source.circle.pixelRadius + target.circle.pixelRadius));\r\n\t\t}\r\n\r\n\t\treturn distance;\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected getStrength(linkDatum: d3force.SimulationLinkDatum<d3force.SimulationNodeDatum>) {\r\n\r\n\t\tlet target: ForceDirectedNode = <ForceDirectedNode>linkDatum.target;\r\n\r\n\t\tlet strength = 0;\r\n\t\tif (target.dataItem && target.dataItem.parentLink) {\r\n\t\t\tstrength = target.dataItem.parentLink.strength;\r\n\t\t}\r\n\r\n\t\treturn strength;\r\n\t}\r\n\r\n\t/**\r\n\t * Handler for drag end event.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic nodeDragEnded(): void {\r\n\t\tthis.d3forceSimulation.alphaTarget(0);\r\n\t}\r\n\t/**\r\n\t * Handler for drag start event.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic nodeDragStarted(): void {\r\n\t\tthis.d3forceSimulation.alpha(0.1);\r\n\t\tthis.d3forceSimulation.restart();\r\n\t}\r\n\r\n\t/**\r\n\t * Resets positions of whole tree.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic restartSimulation(): void {\r\n\t\tif (this.d3forceSimulation.alpha() <= 0.3) {\r\n\t\t\tthis.d3forceSimulation.alpha(0.3);\r\n\t\t\tthis.d3forceSimulation.restart();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateRadiuses(dataItems:OrderedListTemplate<ForceDirectedSeriesDataItem>){\r\n\t\tdataItems.each((dataItem)=>{\r\n\t\t\tthis.updateRadius(dataItem);\r\n\t\t\tif(dataItem.childrenInited){\r\n\t\t\t\tthis.updateRadiuses(dataItem.children);\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t */\r\n\tprotected updateRadius(dataItem:ForceDirectedSeriesDataItem){\r\n\t\tlet node = dataItem.node;\r\n\t\tlet minSide = (this.innerWidth + this.innerHeight) / 2;\r\n\t\tlet minRadius = $utils.relativeToValue(this.minRadius, minSide)\r\n\t\tlet maxRadius = $utils.relativeToValue(this.maxRadius, minSide)\r\n\r\n\t\tlet radius = minRadius + dataItem.value / this._maxValue * (maxRadius - minRadius);\r\n\r\n\t\tif (!$type.isNumber(radius)) {\r\n\t\t\tradius = minRadius;\r\n\t\t}\r\n\r\n\t\tif(!node.circle.isHidden){\r\n\t\t\tnode.circle.radius = radius;\r\n\t\t}\r\n\r\n\t\tnode.outerCircle.radius = radius + 3;\r\n\r\n\t\tnode.circle.states.getKey(\"active\").properties.radius = radius;\r\n\t\tnode.circle.defaultState.properties.radius = radius;\r\n\t}\r\n\r\n\t/**\r\n\t * Initializes node.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic initNode(dataItem: ForceDirectedSeriesDataItem): void {\r\n\r\n\t\tlet node = dataItem.node;\r\n\t\tnode.parent = this;\r\n\t\tthis.updateRadius(dataItem);\r\n\r\n\t\tlet nodeIndex = this.nodes.indexOf(dataItem.node);\r\n\r\n\t\tif (!dataItem.children || dataItem.children.length == 0) {\r\n\t\t\tnode.outerCircle.__disabled = true;\r\n\t\t\tnode.circle.interactionsEnabled = true;\r\n\t\t\tnode.cursorOverStyle = MouseCursorStyle.default;\r\n\t\t}\r\n\t\telse {\r\n\t\t\tnode.cursorOverStyle = MouseCursorStyle.pointer;\r\n\t\t}\r\n\r\n\t\tif (this.dataItemsInvalid && (dataItem.level >= this.maxLevels - 1 || dataItem.collapsed)) {\r\n\t\t\tnode.isActive = false;\r\n\t\t\tthis.updateNodeList();\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (dataItem.children) {\r\n\t\t\tlet index = 0;\r\n\t\t\tdataItem.childrenInited = true;\r\n\r\n\t\t\tif (this.dataItems.length == 1 && dataItem.level == 0) {\r\n\t\t\t\tthis.colors.next();\r\n\t\t\t}\r\n\r\n\t\t\tdataItem.children.each((child) => {\r\n\t\t\t\tlet link = this.links.create();\r\n\t\t\t\tlink.parent = this;\r\n\t\t\t\tlink.zIndex = -1;\r\n\t\t\t\tdataItem.childLinks.push(link);\r\n\t\t\t\tlink.source = dataItem.node;\r\n\t\t\t\tlet childIndex = this.nodes.indexOf(child.node);\r\n\t\t\t\tlink.target = child.node;\r\n\t\t\t\tchild.parentLink = link;\r\n\r\n\t\t\t\tthis._forceLinks.push({ source: nodeIndex, target: childIndex });\r\n\r\n\t\t\t\tlet radius = 2 * node.circle.pixelRadius + child.node.circle.pixelRadius;\r\n\r\n\t\t\t\tlet angle = index / dataItem.children.length * 360;\r\n\r\n\t\t\t\tchild.node.x = node.pixelX + radius * $math.cos(angle);\r\n\t\t\t\tchild.node.y = node.pixelY + radius * $math.sin(angle);\r\n\r\n\t\t\t\tchild.node.circle.radius = 0;\r\n\r\n\t\t\t\tlet color: Color | LinearGradient | RadialGradient | Pattern;\r\n\r\n\t\t\t\tlet diColor = child.properties.color;\r\n\t\t\t\tif ($type.hasValue(diColor)) {\r\n\t\t\t\t\tcolor = diColor;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (this.dataItems.length == 1 && dataItem.level == 0) {\r\n\t\t\t\t\t\tcolor = this.colors.next();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tcolor = dataItem.color;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tchild.color = color;\r\n\t\t\t\tchild.node.fill = color;\r\n\t\t\t\tchild.node.stroke = color;\r\n\t\t\t\tchild.parentLink.stroke = color;\r\n\r\n\t\t\t\tthis.initNode(child);\r\n\r\n\t\t\t\tindex++;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tnode.isActive = true;\r\n\t\tthis.updateNodeList();\r\n\t}\r\n\r\n\t/**\r\n\t * @ignore\r\n\t * @todo description\r\n\t */\r\n\tprotected processLinkWith(dataItem: ForceDirectedSeriesDataItem) {\r\n\r\n\t\tif (dataItem.linkWith) {\r\n\t\t\t$array.each(dataItem.linkWith, (id, index) => {\r\n\t\t\t\tlet dataItemToConnect = this.getDataItemById(this.dataItems, id);\r\n\r\n\t\t\t\tif (dataItemToConnect) {\r\n\t\t\t\t\tlet link = this.links.create();\r\n\t\t\t\t\tlink.parent = this;\r\n\t\t\t\t\tlink.zIndex = -1;\r\n\t\t\t\t\tlink.source = dataItem.node;\r\n\t\t\t\t\tlink.target = dataItemToConnect.node;\r\n\t\t\t\t\tlink.stroke = dataItem.node.fill;\r\n\t\t\t\t\tdataItem.childLinks.push(link);\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tif (dataItem.children) {\r\n\t\t\tdataItem.children.each((child) => {\r\n\t\t\t\tthis.processLinkWith(child);\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a [[ForceDirectedSeriesDataItem]] related to node by specific id.\r\n\t *\r\n\t * @ignore\r\n\t * @param   dataItems  List of data items to search in\r\n\t * @param   id         Id to search for\r\n\t * @return             Data item\r\n\t */\r\n\tpublic getDataItemById(dataItems: OrderedListTemplate<ForceDirectedSeriesDataItem>, id: string): ForceDirectedSeriesDataItem {\r\n\t\tfor (let i = dataItems.length - 1; i >= 0; i--) {\r\n\t\t\tlet dataItem = dataItems.getIndex(i);\r\n\r\n\t\t\tif (dataItem.id == id) {\r\n\t\t\t\treturn dataItem;\r\n\t\t\t}\r\n\t\t\tif (dataItem.children) {\r\n\t\t\t\tlet di = this.getDataItemById(dataItem.children, id);\r\n\t\t\t\tif (di) {\r\n\t\t\t\t\treturn di;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ForceDirectedSeriesDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * A list of nodes in series.\r\n\t * \r\n\t * @return  Node list\r\n\t */\r\n\tpublic get nodes(): ListTemplate<this[\"_node\"]> {\r\n\t\tif (!this._nodes) {\r\n\t\t\tlet node = this.createNode();\r\n\r\n\t\t\tnode.applyOnClones = true;\r\n\t\t\tthis._disposers.push(node);\r\n\r\n\t\t\tthis._nodes = new ListTemplate(node);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._nodes));\r\n\t\t}\r\n\t\treturn this._nodes;\r\n\t}\r\n\r\n\t/**\r\n\t * A list of links between nodes.\r\n\t * \r\n\t * @return  Link list\r\n\t */\r\n\tpublic get links(): ListTemplate<this[\"_link\"]> {\r\n\t\tif (!this._links) {\r\n\t\t\tlet link = this.createLink();\r\n\t\t\tlink.applyOnClones = true;\r\n\t\t\tthis._disposers.push(link);\r\n\r\n\t\t\tthis._links = new ListTemplate(link);\r\n\t\t\tthis._disposers.push(new ListDisposer(this._links));\t\t\t\r\n\t\t}\r\n\t\treturn this._links;\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new node.\r\n\t */\r\n\tprotected createNode(): this[\"_node\"] {\r\n\t\treturn new ForceDirectedNode();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new link.\r\n\t */\r\n\tprotected createLink(): this[\"_link\"] {\r\n\t\treturn new ForceDirectedLink();\r\n\t}\r\n\r\n\t/**\r\n\t * Smallest possible radius in pixels of the node circle.\r\n\t * \r\n\t * If set in percent, it radius will be calculated from average width and\r\n\t * height of series.\r\n\t * \r\n\t * @default Percent(1)\r\n\t * @param  value  Minimum radius (px or percent)\r\n\t */\r\n\tpublic set minRadius(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"minRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Minimum radius (px or percent)\r\n\t */\r\n\tpublic get minRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"minRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * Biggest possible radius in pixels of the node circle.\r\n\t * \r\n\t * If set in percent, it radius will be calculated from average width and\r\n\t * height of series.\r\n\t *\r\n\t * @default Percent(8)\r\n\t * @param  value  Maximum radius (px or Percent)\r\n\t */\r\n\tpublic set maxRadius(value: number | Percent) {\r\n\t\tthis.setPropertyValue(\"maxRadius\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Maximum radius (px or Percent)\r\n\t */\r\n\tpublic get maxRadius(): number | Percent {\r\n\t\treturn this.getPropertyValue(\"maxRadius\");\r\n\t}\r\n\r\n\t/**\r\n\t * A color set to be used for nodes.\r\n\t *\r\n\t * iIt works like this:\r\n\t * \r\n\t * The first level with more than one node, assigns different colors to all\r\n\t * nodes in this list. Their child nodes inherit the color.\r\n\t *\r\n\t * For example, if the top level has one node with three children, the top\r\n\t * node will get first color, the first child will get second color, etc.\r\n\t *\r\n\t * If there are two top nodes, the first top node gets first color, the\r\n\t * second top node gets the second color. Their subsequent children inherit\r\n\t * colors.\r\n\t *\r\n\t * @param value  Color set\r\n\t */\r\n\tpublic set colors(value: ColorSet) {\r\n\t\tthis.setPropertyValue(\"colors\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Color set\r\n\t */\r\n\tpublic get colors(): ColorSet {\r\n\t\treturn this.getPropertyValue(\"colors\");\r\n\t}\r\n\r\n\t/**\r\n\t * Number of levels to be displayed initially.\r\n\t * \r\n\t * @param  value  Number of levels\r\n\t */\r\n\tpublic set maxLevels(value: number) {\r\n\t\tthis.setPropertyValue(\"maxLevels\", value, true);\r\n\t}\r\n\r\n\t/**\r\n\t * @return Number of levels\r\n\t */\r\n\tpublic get maxLevels(): number {\r\n\t\treturn this.getPropertyValue(\"maxLevels\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative strength each node pushes (or attracts) other nodes (it is\r\n\t * multiplied by `node.circle.radius` for big nodes to push stronger).\r\n\t * \r\n\t * Positive value will make nodes attract each other, while negative will\r\n\t * push away each other. The bigger the negative number is, the more \r\n\t * scattered nodes will be.\r\n\t *\r\n\t * Available value range: `-XX` to `XX`.\r\n\t * \r\n\t * @default -15\r\n\t * @param  value  Body push/attrack strength\r\n\t */\r\n\tpublic set manyBodyStrength(value: number) {\r\n\t\tif (this.setPropertyValue(\"manyBodyStrength\", value)) {\r\n\t\t\tthis.restartSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Body push/attrack strength\r\n\t */\r\n\tpublic get manyBodyStrength(): number {\r\n\t\treturn this.getPropertyValue(\"manyBodyStrength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Relative strength each child node is pushes (or attracted) to the center\r\n\t * of the chart.\r\n\t * \r\n\t * Positive value will make nodes to be attracted to center, while negative\r\n\t * will push them away.\r\n\t *\r\n\t * Available value range: `-50` to `50`.\r\n\t * \r\n\t * @default 0.8\r\n\t * @param  value  Stregth of attraction to center\r\n\t */\r\n\tpublic set centerStrength(value: number) {\r\n\t\tif (this.setPropertyValue(\"centerStrength\", value)) {\r\n\t\t\tthis.restartSimulation();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @return  Stregth of attraction to center\r\n\t */\r\n\tpublic get centerStrength(): number {\r\n\t\treturn this.getPropertyValue(\"centerStrength\");\r\n\t}\r\n\r\n\t/**\r\n\t * Binds related legend data item's visual settings to this series' visual\r\n\t * settings.\r\n\t *\r\n\t * @ignore Exclude from docs\r\n\t * @param marker    Container\r\n\t * @param dataItem  Data item\r\n\t */\r\n\tpublic createLegendMarker(marker: Container, dataItem?: this[\"_dataItem\"]): void {\r\n\t\tmarker.children.each((child) => {\r\n\t\t\tlet node = dataItem.node;\r\n\r\n\t\t\tif (child instanceof RoundedRectangle) {\r\n\t\t\t\tchild.cornerRadius(40, 40, 40, 40);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tchild.defaultState.properties.fill = node.fill;\r\n\t\t\tchild.defaultState.properties.stroke = node.stroke;\r\n\t\t\tchild.defaultState.properties.fillOpacity = node.fillOpacity;\r\n\t\t\tchild.defaultState.properties.strokeOpacity = node.strokeOpacity;\r\n\r\n\t\t\tchild.fill = node.fill;\r\n\t\t\tchild.stroke = node.stroke;\r\n\t\t\tchild.fillOpacity = node.fillOpacity;\r\n\t\t\tchild.strokeOpacity = node.strokeOpacity;\r\n\r\n\t\t\tif (child.fill == undefined) {\r\n\t\t\t\tchild.__disabled = true;\r\n\t\t\t}\r\n\r\n\t\t\tlet legendDataItem = <LegendDataItem>marker.dataItem;\r\n\t\t\tlegendDataItem.color = node.fill;\r\n\t\t\tlegendDataItem.colorOrig = node.fill;\r\n\r\n\t\t\tnode.events.on(\"propertychanged\", (ev) => {\r\n\t\t\t\tif (ev.property == \"fill\") {\r\n\r\n\t\t\t\t\tchild.__disabled = false;\r\n\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.fill = node.fill;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.fill = node.fill;\r\n\t\t\t\t\tlegendDataItem.color = node.fill;\r\n\t\t\t\t\tlegendDataItem.colorOrig = node.fill;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (ev.property == \"stroke\") {\r\n\t\t\t\t\tif (!child.isActive) {\r\n\t\t\t\t\t\tchild.stroke = node.stroke;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchild.defaultState.properties.stroke = node.stroke;\r\n\t\t\t\t}\r\n\t\t\t}, undefined, false)\r\n\t\t});\r\n\t}\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedSeries\"] = ForceDirectedSeries;\r\nregistry.registeredClasses[\"ForceDirectedSeriesDataItem\"] = ForceDirectedSeriesDataItem;\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedSeries.ts","import {quadtree} from \"d3-quadtree\";\nimport constant from \"./constant.js\";\nimport jiggle from \"./jiggle.js\";\nimport {x, y} from \"./simulation.js\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Dropbox/www/amcharts4dev/node_modules/d3-force/src/manyBody.js","/**\r\n * ForceDirectedTree chart module.\r\n */\r\n\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { SerialChart, ISerialChartProperties, ISerialChartDataFields, ISerialChartAdapters, ISerialChartEvents, SerialChartDataItem } from \"../../charts/types/SerialChart\";\r\nimport { ForceDirectedSeries, ForceDirectedSeriesDataItem } from \"./ForceDirectedSeries\";\r\nimport { registry } from \"../../core/Registry\";\r\nimport * as $type from \"../../core/utils/Type\";\r\n\r\n/**\r\n * ============================================================================\r\n * DATA ITEM\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines a [[DataItem]] for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n * @see {@link DataItem}\r\n */\r\nexport class ForceDirectedTreeDataItem extends SerialChartDataItem { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * REQUISITES\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * Defines data fields for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedTreeDataFields extends ISerialChartDataFields { }\r\n\r\n/**\r\n * Defines properties for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedTreeProperties extends ISerialChartProperties { }\r\n\r\n/**\r\n * Defines events for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n */\r\nexport interface IForceDirectedTreeEvents extends ISerialChartEvents { }\r\n\r\n/**\r\n * Defines adapters for [[ForceDirectedTree]].\r\n *\r\n * @since 4.3.8\r\n * @see {@link Adapter}\r\n */\r\nexport interface IForceDirectedTreeAdapters extends ISerialChartAdapters, IForceDirectedTreeProperties { }\r\n\r\n\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n\r\n/**\r\n * A main class for [[ForceDirectedTree]] chart type.\r\n *\r\n * @see {@link IForceDirectedTreeEvents} for a list of available Events\r\n * @see {@link IForceDirectedTreeAdapters} for a list of available Adapters\r\n * @see {@link https://www.amcharts.com/docs/v4/chart-types/force-directed/} For more information\r\n * @since 4.3.8\r\n * @important\r\n */\r\nexport class ForceDirectedTree extends SerialChart {\r\n\r\n\t/**\r\n\t * Defines the type of data item.\r\n\t */\r\n\tpublic _dataItem: ForceDirectedTreeDataItem;\r\n\r\n\t/**\r\n\t * Defines available data fields.\r\n\t */\r\n\tpublic _dataFields: IForceDirectedTreeDataFields;\r\n\r\n\t/**\r\n\t * Defines available properties.\r\n\t */\r\n\tpublic _properties!: IForceDirectedTreeProperties;\r\n\r\n\t/**\r\n\t * Defines available adapters.\r\n\t */\r\n\tpublic _adapter!: IForceDirectedTreeAdapters;\r\n\r\n\t/**\r\n\t * Defines available events.\r\n\t */\r\n\tpublic _events!: IForceDirectedTreeEvents;\r\n\r\n\t/**\r\n\t * Defines a type of series that this chart uses.\r\n\t */\r\n\tpublic _seriesType: ForceDirectedSeries;\r\n\r\n\t/**\r\n\t * Constructor\r\n\t */\r\n\tconstructor() {\r\n\r\n\t\t// Init\r\n\t\tsuper();\r\n\t\tthis.className = \"ForceDirectedTree\";\r\n\r\n\t\tthis.seriesContainer.isMeasured = true;\r\n\t\tthis.seriesContainer.layout = \"absolute\";\r\n\r\n\r\n\t\t// Apply theme\r\n\t\tthis.applyTheme();\r\n\t}\r\n\r\n\t/**\r\n\t * Creates and returns a new series of the suitable type.\r\n\t *\r\n\t * @return New series\r\n\t */\r\n\tprotected createSeries(): this[\"_seriesType\"] {\r\n\t\treturn new ForceDirectedSeries();\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new/empty DataItem of the type appropriate for this object.\r\n\t *\r\n\t * @see {@link DataItem}\r\n\t * @return Data Item\r\n\t */\r\n\tprotected createDataItem(): this[\"_dataItem\"] {\r\n\t\treturn new ForceDirectedTreeDataItem();\r\n\t}\r\n\r\n\t/**\r\n\t * Setups the legend to use the chart's data.\r\n\t * \r\n\t * @ignore\r\n\t */\r\n\tpublic feedLegend(): void {\r\n\t\tlet legend = this.legend;\r\n\t\tif (legend) {\r\n\r\n\t\t\tlet legendData: any[] = [];\r\n\r\n\t\t\tthis.series.each((series) => {\r\n\t\t\t\tif (!series.hiddenInLegend) {\r\n\r\n\t\t\t\t\tlet dataItems = series.dataItems;\r\n\t\t\t\t\tif (dataItems.length == 1) {\r\n\t\t\t\t\t\tlet children = series.dataItems.getIndex(0).children;\r\n\t\t\t\t\t\tif (children.length > 0) {\r\n\t\t\t\t\t\t\tdataItems = children;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdataItems.each((dataItem) => {\r\n\t\t\t\t\t\tif (!dataItem.hiddenInLegend) {\r\n\t\t\t\t\t\t\tlegendData.push(<ForceDirectedSeriesDataItem>dataItem);\r\n\r\n\t\t\t\t\t\t\tlet legendSettings = series.legendSettings;\r\n\t\t\t\t\t\t\tif (legendSettings) {\r\n\t\t\t\t\t\t\t\tif (legendSettings.labelText) {\r\n\t\t\t\t\t\t\t\t\tlegend.labels.template.text = legendSettings.labelText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (legendSettings.itemLabelText) {\r\n\t\t\t\t\t\t\t\t\tlegend.labels.template.text = legendSettings.itemLabelText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (legendSettings.valueText) {\r\n\t\t\t\t\t\t\t\t\tlegend.valueLabels.template.text = legendSettings.valueText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (legendSettings.itemValueText) {\r\n\t\t\t\t\t\t\t\t\tlegend.valueLabels.template.text = legendSettings.itemValueText;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlegend.data = legendData;\r\n\t\t\tlegend.dataFields.name = \"name\";\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Sets defaults that instantiate some objects that rely on parent, so they\r\n\t * cannot be set in constructor.\r\n\t */\r\n\tprotected applyInternalDefaults(): void {\r\n\r\n\t\tsuper.applyInternalDefaults();\r\n\r\n\t\t// Add a default screen reader title for accessibility\r\n\t\t// This will be overridden in screen reader if there are any `titles` set\r\n\t\tif (!$type.hasValue(this.readerTitle)) {\r\n\t\t\tthis.readerTitle = this.language.translate(\"Force directed tree\");\r\n\t\t}\r\n\t}\r\n\r\n}\r\n\r\n/**\r\n * Register class in system, so that it can be instantiated using its name from\r\n * anywhere.\r\n *\r\n * @ignore\r\n */\r\nregistry.registeredClasses[\"ForceDirectedTree\"] = ForceDirectedTree;\r\nregistry.registeredClasses[\"ForceDirectedTreeDataItem\"] = ForceDirectedTreeDataItem;\r\n\n\n\n// WEBPACK FOOTER //\n// ../../../../../src/.internal/plugins/forceDirected/ForceDirectedTree.ts","import * as m from \"../../es2015/plugins/forceDirected\";\nwindow.am4plugins_forceDirected = m;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./plugins/forceDirected.js\n// module id = null\n// module chunks = "],"sourceRoot":""}